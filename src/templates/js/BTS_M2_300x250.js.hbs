function animate() {
	// cl('{{name}}');

	var clipClosed = 'polygon(-120% 0%, 0% 0%, 0% 100%, -120% 100%)',
		clipOpen = 'polygon(-120% 0%, 120% 0%, 120% 100%, -120% 100%)';
/*{{!-- 

You can animate the CSS rules themselves (which is what CSSRulePlugin is for), but not the elements (or element.style). I'd recommend avoiding pseudo elements if your goal is to animate things.

 --}} */
	tl
		.add('start')
		.from('#banner', { autoAlpha:0, duration:0.3 },'start')
		.from(['#beat','#the','#stigma'], { scale:0.5, transformOrigin:'50% 50%', alpha:0, stagger:0.3 })
		.add('f2','+=1.5' )
		.to('#bts-logo',{ alpha:0, scale: 1.5 }, 'f2')
		.from('#f2-container h1', { alpha:0, x:'-=50'})
		.add('listIn', '+=0.5')
		.from('#f2-t1 li', {x:'-=30', alpha:0, stagger: 0.8}, 'listIn')
		.from('#f2-strike', { alpha:0, duration: 0.1})
		.fromTo('#f2-strike', {clipPath: clipClosed}, {clipPath: clipOpen, duration:0.8}, '+=2')
		// .fromTo('#f2-strike span', {clipPath: clipClosed}, {clipPath: clipOpen}, '+=2')
		.to('#answer', {backgroundPosition: '0% 100%'}, '+=.2')
		.add('f2Out', '+=1.5')
		.to(['#f2-container h1', '#f2-strike li'],{alpha:0, x:'+=30', stagger: 0.1}, 'f2Out')
		.set('.wrong-answer', {alpha:0}, 'f2Out')
		.to('ol li',{alpha:0, x:'+=30', stagger: 0.1}, 'f2Out')
		.add('end')
		.from('#end-txt', { alpha:0, x:'-=50'}, 'end')
		.from('#cta', { alpha:0 },'+=1')
		.from('#ohio-logo',{ alpha:0 })
		.add(initReplayAction)
		.from(replay.container, { autoAlpha: 0 }){{!-- 
		// .seek('listIn+=2.6');
		// .seek('f2Out');
		// tl.pause('10.4');
		// tl.pause('7.9');
		// tl.pause('11.5');
		--}};
		console.log('Animation Runtime is ' + tl.endTime());
}
